#include<stdio.h>
int binsearch(int x, int v[],int n)
{
    int low, high, mid;
    low = 0 ;
    high = n-1;
    while(low <= high){
        mid= (low+high) /2;
        if (x < v[mid])
            high = mid -1;
        else if (x > v[mid])
            low = mid + 1;
        else
            return mid ;
    }
    return -1 ;
}

double atof(char s[])
{
    double val, power;
    int i, sign;
    for(i = 0; isspace(s[i]); i++)
        ;
    sign = (s[i]== '-')? -1: 1 ;
    if (s[i] == '+' || s[i] == '-')
        i++;

    for(val = 0.0; isdigit(s[i]); i++)
        val = 10.0 * val + (s[i] - '0');
    if (s[i] == '.')
        i++;
    for(power = 1.0; isdigit(s[i]); i++){
        val = 10.0 * val + (s[i] - '0');
        power  *= 10.0;
    }
    return sign * val / power;
}

void swap(int v[], int i , int j)
{
    int temp;
    temp = v[i];
    v[i] = v[j];
    v[j] = temp;
}

void qsort( int v[], int left, int right)
{
    int i , last ;

    if (left >= right)
        return;
    swap(v, left, (left + right)/2);
    last = left;
    for (i = left +1 ; i <= right ; i++)
        if (v[i] < v[left])
            swap(v, ++last, i),
    swap(v, left ,last);
    qsort(v, left , last-1);
    qsort(v, last-1 , right);

}

main()
{
    int v[6];
    v[0]=4;
    v[1]=3;
    v[2]=8;
    v[3]=2;
    v[4]=7;
    v[5]=8;
    qsort(v, 0, 5);
    printf("%d", v[0]);
}
